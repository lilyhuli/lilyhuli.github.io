<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TangDon的博客</title>
  
  <subtitle>单口喜剧是一种人格紊乱，而我们以此为生。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="lilyhuli.github.io/"/>
  <updated>2019-01-13T16:17:38.270Z</updated>
  <id>lilyhuli.github.io/</id>
  
  <author>
    <name>TangDon</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>丝袜哥</title>
    <link href="lilyhuli.github.io/2018/04/22/swagger/"/>
    <id>lilyhuli.github.io/2018/04/22/swagger/</id>
    <published>2018-04-22T05:40:00.000Z</published>
    <updated>2019-01-13T16:17:38.270Z</updated>
    
    <content type="html"><![CDATA[<p>1.2.Swagger-UI</p><p>丝袜哥</p><p>1.2.1.什么是OpenAPI</p><p>随着互联网技术的发展，现在的网站架构基本都由原来的后端渲染，变成了：前端渲染、前后端分离的形态，而且前端技术和后端技术在各自的道路上越走越远。  前端和后端的唯一联系，变成了API接口；API文档变成了前后端开发人员联系的纽带，变得越来越重要。</p><p>没有API文档工具之前，大家都是手写API文档的，在什么地方书写的都有，而且API文档没有统一规范和格式，每个公司都不一样。这无疑给开发带来了灾难。</p><p>OpenAPI规范（OpenAPI Specification 简称OAS）是Linux基金会的一个项目，试图通过定义一种用来描述API格式或API定义的语言，来规范RESTful服务开发过程。目前V3.0版本的OpenAPI规范已经发布并开源在github上 。</p><p>官网：<a href="https://github.com/OAI/OpenAPI-Specification" target="_blank" rel="noopener">https://github.com/OAI/OpenAPI-Specification</a></p><p>1.2.2.什么是swagger？</p><p>OpenAPI是一个编写API文档的规范，然而如果手动去编写OpenAPI规范的文档，是非常麻烦的。而Swagger就是一个实现了OpenAPI规范的工具集。</p><p>官网：<a href="https://swagger.io/" target="_blank" rel="noopener">https://swagger.io/</a></p><p>Swagger包含的工具集：</p><p>Swagger编辑器： Swagger Editor允许您在浏览器中编辑YAML中的OpenAPI规范并实时预览文档。</p><p>Swagger UI： Swagger UI是HTML，Javascript和CSS资产的集合，可以从符合OAS标准的API动态生成漂亮的文档。</p><p>Swagger Codegen：允许根据OpenAPI规范自动生成API客户端库（SDK生成），服务器存根和文档。</p><p>Swagger Parser：用于解析来自Java的OpenAPI定义的独立库</p><p>Swagger Core：与Java相关的库，用于创建，使用和使用OpenAPI定义</p><p>Swagger Inspector（免费）： API测试工具，可让您验证您的API并从现有API生成OpenAPI定义</p><p>SwaggerHub（免费和商业）： API设计和文档，为使用OpenAPI的团队构建。</p><p>常用注解说明</p><p>/**</p><p>@Api：修饰整个类，描述Controller的作用</p><p>@ApiOperation：描述一个类的一个方法，或者说一个接口</p><p>@ApiParam：单个参数描述</p><p>@ApiModel：用对象来接收参数</p><p>@ApiProperty：用对象接收参数时，描述对象的一个字段</p><p>@ApiResponse：HTTP响应其中1个描述</p><p>@ApiResponses：HTTP响应整体描述</p><p>@ApiIgnore：使用该注解忽略这个API</p><p>@ApiError ：发生错误返回的信息</p><p>@ApiImplicitParam：一个请求参数</p><p>@ApiImplicitParams：多个请求参数</p><p>*/</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1.2.Swagger-UI&lt;/p&gt;
&lt;p&gt;丝袜哥&lt;/p&gt;
&lt;p&gt;1.2.1.什么是OpenAPI&lt;/p&gt;
&lt;p&gt;随着互联网技术的发展，现在的网站架构基本都由原来的后端渲染，变成了：前端渲染、前后端分离的形态，而且前端技术和后端技术在各自的道路上越走越远。  前端和后端的唯
      
    
    </summary>
    
      <category term="编程人生" scheme="lilyhuli.github.io/categories/%E7%BC%96%E7%A8%8B%E4%BA%BA%E7%94%9F/"/>
    
    
      <category term="java" scheme="lilyhuli.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>hexo博客的诞生</title>
    <link href="lilyhuli.github.io/2017/11/10/hexo/"/>
    <id>lilyhuli.github.io/2017/11/10/hexo/</id>
    <published>2017-11-10T09:52:00.000Z</published>
    <updated>2018-01-07T17:35:48.249Z</updated>
    
    <content type="html"><![CDATA[<p>该博客托管在github pages上，所以免去了备案等手续，域名还没有申请，暂时先用github的<br>。</p>   <p>友：市面上已经有很多现成的博客平台，为什么还要自己搭建一个？<br><br>   我：想到搭建的目的，一来是自己的拖延症越来越严重，一点点小借口都能摧毁曾经燃起的雄雄壮志，做一个独立博客，记录生活点滴，技术感悟，望自己能成长的快些；二来作为个人营销的门面，喜欢卖弄和自我营销的我当然还建一个独立的博客，简单的博客没什么技术含量，所以才更注重内容，符合极简主义的定位。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;该博客托管在github pages上，所以免去了备案等手续，域名还没有申请，暂时先用github的&lt;br&gt;。&lt;/p&gt;


   &lt;p&gt;友：市面上已经有很多现成的博客平台，为什么还要自己搭建一个？&lt;br&gt;&lt;br&gt;   我：想到搭建的目的，一来是自己的拖延症越来越严重，一点点
      
    
    </summary>
    
    
      <category term="hexo" scheme="lilyhuli.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
